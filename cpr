#!/bin/bash
# CPCAM - camera footage card copy/backup utility

# (c) 2016, author: Digidog (aka. diqidoq) in courtesy of MAROQQO digital media
# This program is free software released under the GPL v3 License
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

APP="cpcam"
CONFIG="config.cfg"
OS=$(uname -s)
DSTAMP="$(date +%y%m%d_%H%M%S)"
CONFIG_DIR="$HOME/.config/$APP"
CONFIG_FILE_PATH="$CONFIG_DIR/$CONFIG"
SOURCE=""
TARGET=""

function Help(){
cat << EOF

$APP - camera footage card copy/backup utility
-----------------------------------------------
(c) 2016, author: Digidog (aka. diqidoq) in courtesy of MAROQQO digital media
This program is free software released under the GPL v3 License

Files:
~/share/$APP/$APP
~/share/$APP/README.md
~/share/$APP/LICENSE
~/.$APP/config.cfg
~/.$APP/config.cfg.{DATE}.bkp (optional if -d has been used)

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

HELP
----

On first run of $APP it will ask you to provide a default SOURCE and TARGET path.

ERROR: <directory> seems not to be where it was expected, or it is not mounted.
SOLUTION: Make sure that the paths of your provided SOURCE and TARGET directories really exist. Some usb devices have other mount points in your system than you would expect. Test your expected mount paths if this error occures.

Commands
--------

$APP                 	starts sync process between given paths
$APP -h | --help     	prints help
$APP -d              	reconfigures SOURCE and TARGET path
$APP -r | -i | --info   reading and printing SOURCE and TARGET path info

EOF
}

function ReadConfig(){
  echo "Reading config...." >&2
  . "$1"
  if [ "$SOURCE" != "$TARGET" ] ; then
    echo "Config setting for the source dir is '$SOURCE'" >&2
    echo "Config setting for the target dir is '$TARGET'" >&2
  else
    printf "WARNING: SOURCE and TARGET are exactly the same! $APP will quit. Please use <$APP -d> to setup new directories."
    exit 1
  fi
}

function SetConfig(){
  local SetConfig_REPLY
  read -p "Source path: " SOURCE
  read -p "Target path: " TARGET
  if [ ! -d "$TARGET" ] ; then
    read -p "Your entered TARGET base directory seems not to exist, do you want to create it? <y/n>: " SetConfig_REPLY
    if [ "$SetConfig_REPLY" == "y" ] || [ "$SetConfig_REPLY" == "yes" ] ; then
      mkdir -p "$TARGET"
    else
      echo "You choose [n]o. $APP will reopen -d (set up directory) dialoque now for you again. You can break up with CTRL C."
      SetConfig
    fi
  fi
  echo "SOURCE=$SOURCE" > "$CONFIG_FILE_PATH"
  echo "TARGET=$TARGET" >> "$CONFIG_FILE_PATH"
  echo "Setup finished. You can simply type <$APP> now to start a backup process."
}

function InitConfig(){
  echo "There isn't a config file yet. Please enter target and source path you want to use."
  mkdir -p "$CONFIG_DIR"
  SetConfig
}

function LoadConfig(){
  if [ -f "$1" ] ; then
    ReadConfig "$1"
  else
    InitConfig
  fi
}

function CheckDir(){
  local CREATE_DIR_REPLY
  printf "\nChecking '$1' ...\n"
  if [ -d "$1" ] ; then
    printf '%s\n' "SUCCESS: Path and folder exist."
  else
    if [ "$1" == "$SOURCE" ] ; then
      printf '%s\n' "ERROR: SOURCE '$1' seems not to be where it was expected, or doesn't exist / isn't mounted. $APP will quit.

      You can use <$APP -d> to setup the directories again.
      "
      exit 1
    else
      printf '%s\n' "ERROR: TARGET '$1' seems not to be where it was expected, or doesn't exist / isn't mounted. You can create the missing directory by pressing <y> or you can use <cpcam -d> to setup the directories again by pressing <n> in the next step."
      read -p "Do you want to create the missing directory? <y/n>: " CREATE_DIR_REPLY
      if [ "$CREATE_DIR_REPLY" == "y" ] || [ "$CREATE_DIR_REPLY" == "yes" ] ; then
        mkdir -p "$1"
        printf "TARGET dir $1 cerated..."
      else
        printf "cpcam will stop now. Use <cpcam -d> to set up new directories.\n"
      exit 1
      fi
    fi
  fi
}

function IsEmpty(){
  local TESTDIR
  TESTDIR=$1
  [ $# -eq 0 ] && { echo "Usage: $0 directory"; exit 2; }
  [ ! -d "$TESTDIR" ] && { echo "$TESTDIR is not a directory."; exit 2; }
  if find "$TESTDIR" -maxdepth 0 -empty | read ; then
    printf "\n Warning: $TESTDIR is empty!"
    exit 0
  else
    printf "\n Source dir check successful. Source dir $TESTDIR is not empty."
  fi
}

function RunSync(){
  LoadConfig "$CONFIG_FILE_PATH"
  SOURCE_DIR="$SOURCE"
  TARGET_ROOT="$TARGET"
  if [ -z "$1" ] ; then TARGET_DIR="$TARGET_ROOT/$DSTAMP" ; else TARGET_DIR="$TARGET_ROOT/$1" ; fi
  CheckDir "$SOURCE_DIR"
  CheckDir "$TARGET_ROOT"
  IsEmpty "$SOURCE_DIR"

  # start copy/sync process with progress info and finish requirement
  rsync -a --no-i-r --stats --human-readable --info=progress2 "$SOURCE_DIR"/ "$TARGET_DIR"/ # | pv -ep -s 42 >/dev/null

  # custom messages with listing of copied files after finish
  echo "--- --- ---"
  echo "$(ls -1 "$SOURCE_DIR" | wc -l) items found on $SOURCE_DIR
  Size: $(du -sh "$SOURCE_DIR")"
  echo "$(ls -1 "$TARGET_DIR" | wc -l) items copied to $TARGET_DIR
  Size: $(du -sh "$TARGET_DIR")"
  echo "--- --- ---"

  # open both sides of copy/sync in file manager for optical comparision
  if [[ "$OS" == *"Linux"* ]] ; then
    xdg-open "$SOURCE_DIR" &
    xdg-open "$TARGET_DIR" &
  elif [[ "$OS" == *"Mac"* ]] ; then
    open "$SOURCE_DIR" &
    open "$TARGET_DIR" &
  else
    echo "ERROR: Your OS isnt supported yet to open your default file manager."
  fi

exit 0
}

case "$1" in
	-h|--help)
		Help
		exit 1
	;;
		-d|--dir)
    if [ -f "$CONFIG_FILE_PATH" ] ; then cp "$CONFIG_FILE_PATH" "$CONFIG_FILE_PATH.$DSTAMP.bkp" ; fi
		SetConfig
		exit 1
	;;
		'')
		RunSync
		exit 0
	;;
    '-n')
		read -e -p "(-n): You choose to name a custom sub folder by yourself. This deactivates the cpcam datestamp sub folder mechanism. Please enter the name you wish to use (if empty date stamp will be used): " SUBDIR_NAME
    RunSync "$SUBDIR_NAME"
		exit 0
	;;
    '-r'|'-i'|'--info')
	        LoadConfig $CONFIG_FILE_PATH
		exit 0
	;;
       *)
		Help
		exit 1
	;;
esac

exit 0
